{#- This block extracts the system message, so we can slot it into the right place. #}
{%- if messages and messages[0]['role'] == 'system' %}
    {%- if messages[0]['content'] is string %}
        {%- set system_message = messages[0]['content']|trim %}
    {%- else %}
        {%- set system_message = messages[0]['content'][0]['text']|trim %}
    {%- endif %}
    {%- set messages = messages[1:] %}
{%- else %}
    {%- if tools is not none %}
        {%- set system_message = "You are a helpful assistant with tool calling capabilities. Only reply with a tool call if the function exists in the library provided by the user. If it doesn't exist, just reply directly in natural language. When you receive a tool call response, use the output to format an answer to the original user question." %}
    {%- else %}
        {%- set system_message = "" %}
    {%- endif %}
{%- endif %}

{%- if messages %}
    {%- if system_message or tools %}
<|system|>

{%- if system_message %}
{{ system_message }}
{%- endif %}
{%- if tools %}
In addition to plain text responses, you can choose to call one or more of the provided functions.

Use the following rule to decide when to call a function:
  * if the response can be generated from your internal knowledge (e.g., as in the case of queries like "What is the capital of Poland?"), do so
  * if you need external information that can be obtained by calling one or more of the provided functions, generate a function calls

If you decide to call functions:
  * prefix function calls with <|tool_call|> marker
  * all function calls should be generated in a single JSON list formatted as <|tool_call|>[{"name": [function name], "arguments": [function arguments as JSON]}, ...]<|/tool_call|>
  * follow the provided JSON schema. Do not hallucinate arguments or values. Do to blindly copy values from the provided samples
  * respect the argument type formatting. E.g., if the type is number and format is float, write value 7 as 7.0
  * make sure you pick the right functions that match the user intent


        {%- for t in tools %}
            {{- t | tojson(indent=4) }}
            {{- "\n\n" }}
        {%- endfor %}
{%- endif %}<|end|>

    {%- for message in messages %}
<|{{ message.role }}|>
            {%- if message.content and message.role == "tool" %}
<|tool_response|>{{ message.content }}
            {%- elif message.content %}
{{ message.content }}
            {%- elif message.tool_calls %} <|tool_call|>[
                {%- for call in message.tool_calls %}
{"name": "{{ call.function.name }}", "arguments": {{ call.function.arguments }}}
                    {%- if not loop.last %},{% endif %}
                {%- endfor %}]<|/tool_call|>
            {%- endif %}<|end|>
    {%- endfor %}<|assistant|>
{%- endif %}

{%- else %}
    {%- if system_message %}
<|system|>

{{ system_message }}<|end|>
    {%- endif %}
    {%- if prompt %}
<|user|>

{{ prompt }}<|end|>
    {%- endif %}<|assistant|>

{%- endif %}
{{ response }}
{%- if response %}<|user|>{% endif %}